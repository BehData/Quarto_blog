---
title: 'Working Memory, Mathematical Anxiety'
author: "Jorge Huanca"
date: '2023-03-12'
categories: ['Multiple linear regression','Math Anxiety']
image: "image/image_jorge.jpg"
description: 'Search the determinants of math performance'
---

### Step 1: Install and load the packages

```{r echo = FALSE}
# install.packages("ggplot2")
# install.packages("dplyr")
# install.packages("broom")
# install.packages("ggpubr")
# install.packages("tidyverse")
```

```{r warning = FALSE}
pacman::p_load("broom","ggpubr","tidyverse","readr")
```

### Step 2: Load the data into R

```{r}
# Load the database
data_math <- read.csv("data/WMAth data.csv")
```

### Step 3: Explore outcome variable (must be numeric)

We checked if the independient variables (VI) are numeric

```{r}
glimpse(data_math)
#Independent variables
#Opposites: Verbal Working Memory
#Nspan: Verbal Working Memory
#Colors: Visuospatial Working Memory
#PSWQ:The Penn State Worry Questionnaire, 16-item, 1-5 Likert  
#MARS:The mathematical anxiety rating scale, 30-item, 0-4 Likert 
#Dependent variables
#Fluency:Math Performance Assessment.
#Calculation:Math Performance Assessment.
```

### Step 4: Make sure data assumptions

#### A. Linearity

```{r}
# Influence of Working Memory
plot(Calculation ~ Opposites + Nspan + Colors, data = data_math)
# Influence of Math Anxiety
plot(Fluency + Calculation ~ MARS + PSWQ, data = data_math)
```

#### B. Independence of observations

Teoricamente se entiende que las variables son independientes

```{r echo=FALSE}
#create the model
m_rendimiento_lm <- lm(Calculation ~ MARS + Opposites + Nspan, data = data_math)
```


```{r}
library(car)
#correlation
cor(data_math$Calculation, data_math$MARS)
cor(data_math$Calculation, data_math$Opposites)
cor(data_math$Calculation, data_math$Nspan)
#variance inflation factor
vif(m_rendimiento_lm)
```

#### C. Normality

```{r}
#Independent variables
#Verbal Working Memory
hist(data_math$Opposites) 
hist(data_math$Nspan)
#Math Anxiety
hist(data_math$MARS)
#Independent variables
hist(data_math$Fluency)
hist(data_math$Calculation)
# Se puede evaluar la normalidad por  QQplot, Kurtosis
```

### Step 5: Perform the linear regression analysis

```{r}
m_rendimiento_lm <- lm(Calculation ~ MARS + Opposites + Nspan, data = data_math)
summary(m_rendimiento_lm)
```

### Step 6: Check the homocedasticity

```{r}
par(mfrow=c(2,2))
plot(m_rendimiento_lm)
par(mfrow=c(1,1))
```

### Step 7: Perform a graph to visualize the results

```{r}
print(m_rendimiento_lm)
# Get the Intercept and coefficients as vector elements.
cat("# # # # The Coefficient Values # # # ","\n")
a <- coef(m_rendimiento_lm)[1]
print(a)
Xedad <- coef(m_rendimiento_lm)[2]
Xprom <- coef(m_rendimiento_lm)[3]
print(Xedad)
print(Xprom)
```

